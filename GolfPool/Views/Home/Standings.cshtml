@model IEnumerable<GolfPool.Models.Team>

@{
    ViewBag.Title = "Standings";
}

@section scripts
{
    <script type="text/javascript" src="~/Scripts/knockout-2.2.1.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.signalR-1.0.0.js"></script>
    <script type="text/javascript" src="~/signalr/hubs"></script>
    <script type="text/javascript">
        $(function() {

            function sortTable() {
                var swapped = false;
                var rows = $("#standings-container div.row-fluid").not(".header-row");
                rows.filter(".move-down").removeClass('move-down');
                rows.filter(".move-up").removeClass('move-up');
                for (var i = 0; i < rows.length - 1; i++) {
                    var firstRow = $(rows[i]);
                    var secondRow = $(rows[i + 1]);
                    var v1 = parseInt($(firstRow.find(".overall")[0]).text());
                    var v2 = parseInt($(secondRow.find(".overall")[0]).text());
                    if (v2 < v1) {
                        swapRows(firstRow, secondRow);
                        swapped = true;
                    }
                }
                if (swapped)
                    setTimeout(sortTable, 5100);
            }

            function swapRows(firstRow, secondRow) {
                var height = firstRow.outerHeight();

                firstRow.insertAfter(secondRow);
                firstRow.css("top", height * -1).addClass('move-down');
                secondRow.css("top", height).addClass('move-up');
                
                firstRow.animate({ top: 0 }, 800);
                secondRow.animate({ top: 0 }, 800);
            }

            function golferVM(id, score, fullname, position, today, thru, lastUpdate, day1, day2, day3, day4) {
                var self = this;
                self.GolferID = id;
                self.Score = ko.observable(score);
                self.Fullname = ko.observable(fullname);
                self.Position = ko.observable(position);
                self.Today = ko.observable(today);
                self.Thru = ko.observable(thru);
                self.LastUpdate = ko.observable(lastUpdate);
                self.Day1 = ko.observable(day1);
                self.Day2 = ko.observable(day2);
                self.Day3 = ko.observable(day3);
                self.Day4 = ko.observable(day4);
                
                self.showPlayerInfo = function(data, event) {
                    var playerDiv = $('#player-template').clone();
                    playerDiv.find('.Fullname').text(self.Fullname());
                    playerDiv.find('.Position').text(self.Position());
                    playerDiv.find('.Today').text(self.Today());
                    playerDiv.find('.Thru').text(self.Thru());
                    playerDiv.find('.LastUpdate').text(self.LastUpdate());
                    $(event.srcElement).popover({ placement: 'bottom', html: true, content: playerDiv.html() }).popover('show');
                };
                self.hidePlayerInfo = function(data, event) {
                    $(event.srcElement).popover('hide');
                };
            }

            function teamVM(id, teamName, context) {
                var self = this;
                self.hub = context.hub;
                self.TeamID = id;
                self.TeamName = teamName;
                self.Golfers = ko.observableArray([]);

                self.Overall = ko.computed(function() {
                    var sum = 0;
                    var golfers = self.Golfers();
                    for (var i = 0; i < golfers.length; i++) {
                        sum += golfers[i].Score();
                    }
                    return sum;
                });

                $.get('@Url.Action(MVC.Home.TeamGolfers())/' + id, function(golfers) {
                    self.Golfers(ko.utils.arrayMap(golfers, function(golfer) {
                        return new golferVM(golfer.GolferID, golfer.Score, golfer.FullName, golfer.Position, golfer.Today, golfer.Thru, golfer.LastUpdate, golfer.Day1);
                    }));
                });

                self.hub.on("golferUpdated", function(updatedGolfer) {
                    var golfer = ko.utils.arrayFirst(self.Golfers(), function(value) { return value.GolferID == updatedGolfer.GolferID; });
                    if (golfer != null) {
                        golfer.Score(updatedGolfer.Score);
                        golfer.Position(updatedGolfer.Position);
                        golfer.Today(updatedGolfer.Today);
                        golfer.Thru(updatedGolfer.Thru);
                        golfer.LastUpdate(updatedGolfer.LastUpdate);
                        golfer.Day1(updatedGolfer.Day1);
                        golfer.Day1(updatedGolfer.Day2);
                        golfer.Day1(updatedGolfer.Day3);
                        golfer.Day1(updatedGolfer.Day4);
                        sortTable();
                    }
                });
            }

            ;

            function teamListVM() {
                var self = this;
                self.hub = $.connection.leaderboardHub;
                self.teams = ko.observableArray([]);

                self.init = function() {
                    self.hub.server.getTeamList();
                };

                self.hub.client.InitTeamList = function(allTeams) {
                    var teamList = ko.utils.arrayMap(allTeams, function(team) {
                        return new teamVM(team.TeamID, team.TeamName, self);
                    });
                    self.teams(teamList);
                };
            }

            ;
            var vm = new teamListVM();
            ko.applyBindings(vm);
            $.connection.hub.logging = true;
            $.connection.hub.start(function() { vm.init(); });
        });
    </script>

} 

<br/>
<br/>
<br/>


<div id="standings-container" class="container-fluid" style="width: 100%; height: 100%; position: relative">
    <div class="row-fluid header-row">
        <div class="span2"><strong>Team Name</strong></div>
        <div class="span1 text-center"><strong>1</strong></div>
        <div class="span1 text-center"><strong>2</strong></div>
        <div class="span1 text-center"><strong>3</strong></div>
        <div class="span1 text-center"><strong>4</strong></div>
        <div class="span1 text-center"><strong>5</strong></div>
        <div class="span1 text-center"><strong>6</strong></div>
        <div class="span1 text-center"><strong>7</strong></div>
        <div class="span1 text-center"><strong>8</strong></div>
        <div class="span1 text-center"><strong>Overall</strong></div>
        <div class="span1"></div>
    </div>
    <!-- ko foreach: teams -->
    <div class="row-fluid table-row" style="position: relative;">
        <div class="span2"><h5 data-bind="text: TeamName"></h5></div>
        <!-- ko foreach: Golfers -->
        <div class="span1 text-center cell" data-bind="text: Score, event: {mouseover: showPlayerInfo, mouseout: hidePlayerInfo}"></div>
        <!-- /ko -->
        <div class="span1  text-center cell overall" data-bind="text: Overall"></div>
    </div>
    <!-- /ko -->
</div>

   
    <div id="player-template" style="display: none;">
    <table>
        <tr >
            <td colspan="5"><h4 class="Fullname"></h4> </td>
        </tr>
        <tr >
            <th >Pos</th>
            <th >Today</th>
            <th >Thru</th>
            
            <th >Udated</th>
        </tr>
        <tr >
            <td class=" Position"></td>
            <td class=" Today"></td>
            <td class=" Thru"></td>
            
            <td class=" LastUpdate"></td>
        </tr>
        <tr >
            <th >D1</th>
            <th >D2</th>
            <th >D3</th>
            <th >D4</th>
        </tr>
        <tr >
            <td class=" Day1"></td>
            <td class=" Day2"></td>
            <td class=" Day3"></td>
            <td class=" Day4"></td>
        </tr>
    </table>
</div>